{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "┌ Info: Precompiling DiffEqFlux [aae7a2af-3d4f-5e19-a356-7da93b79d9d0]\n",
      "└ @ Base loading.jl:1260\n",
      "┌ Info: Precompiling DifferentialEquations [0c46a032-eb83-5123-abaf-570d42b7fbaa]\n",
      "└ @ Base loading.jl:1260\n",
      "┌ Info: Precompiling Plots [91a5bcdd-55d7-5caf-9e0b-520d859cae80]\n",
      "└ @ Base loading.jl:1260\n",
      "┌ Warning: `param(x)` is deprecated, use `x` instead.\n",
      "│   caller = top-level scope at In[2]:24\n",
      "└ @ Core In[2]:24\n",
      "┌ Warning: diffeq_rd has been deprecated in the update of DiffEqFlux to Zygote support. Use the concrete_solve function with sensealg=TrackerAdjoint() to recover the same functionality. See https://docs.juliadiffeq.org/latest/analysis/sensitivity/ for more details\n",
      "└ @ DiffEqFlux C:\\Users\\Julius\\.julia\\packages\\DiffEqFlux\\7Lfxh\\src\\DiffEqFlux.jl:19\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "4311.399889162692"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "┌ Warning: `concrete_solve(prob::DiffEqBase.DEProblem, alg::Union{DiffEqBase.DEAlgorithm, Nothing}, u0 = prob.u0, p = prob.p, args...; kwargs...)` is deprecated, use `solve(prob, alg, args...; u0 = u0, p = p, kwargs...)` instead.\n",
      "│   caller = ip:0x0\n",
      "└ @ Core :-1\n"
     ]
    },
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"600\" height=\"400\" viewBox=\"0 0 2400 1600\">\n",
       "<defs>\n",
       "  <clipPath id=\"clip110\">\n",
       "    <rect x=\"0\" y=\"0\" width=\"2400\" height=\"1600\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<path clip-path=\"url(#clip110)\" d=\"\n",
       "M0 1600 L2400 1600 L2400 0 L0 0  Z\n",
       "  \" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<defs>\n",
       "  <clipPath id=\"clip111\">\n",
       "    <rect x=\"480\" y=\"0\" width=\"1681\" height=\"1600\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<path clip-path=\"url(#clip110)\" d=\"\n",
       "M112.177 1423.18 L2352.76 1423.18 L2352.76 47.2441 L112.177 47.2441  Z\n",
       "  \" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<defs>\n",
       "  <clipPath id=\"clip112\">\n",
       "    <rect x=\"112\" y=\"47\" width=\"2242\" height=\"1377\"/>\n",
       "  </clipPath>\n",
       "</defs>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,1423.18 112.177,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  560.293,1423.18 560.293,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  1008.41,1423.18 1008.41,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  1456.52,1423.18 1456.52,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  1904.64,1423.18 1904.64,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  2352.76,1423.18 2352.76,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,1423.18 2352.76,1423.18 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,1193.86 2352.76,1193.86 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,964.535 2352.76,964.535 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,735.212 2352.76,735.212 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,505.889 2352.76,505.889 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,276.567 2352.76,276.567 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"\n",
       "  112.177,47.2441 2352.76,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1423.18 2352.76,1423.18 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1423.18 112.177,47.2441 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1423.18 112.177,1406.67 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  560.293,1423.18 560.293,1406.67 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  1008.41,1423.18 1008.41,1406.67 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  1456.52,1423.18 1456.52,1406.67 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  1904.64,1423.18 1904.64,1406.67 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  2352.76,1423.18 2352.76,1406.67 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1423.18 139.064,1423.18 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1193.86 139.064,1193.86 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,964.535 139.064,964.535 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,735.212 139.064,735.212 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,505.889 139.064,505.889 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,276.567 139.064,276.567 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,47.2441 139.064,47.2441 \n",
       "  \"/>\n",
       "<path clip-path=\"url(#clip110)\" d=\"M 0 0 M112.177 1445.17 Q108.566 1445.17 106.737 1448.74 Q104.932 1452.28 104.932 1459.41 Q104.932 1466.51 106.737 1470.08 Q108.566 1473.62 112.177 1473.62 Q115.811 1473.62 117.617 1470.08 Q119.446 1466.51 119.446 1459.41 Q119.446 1452.28 117.617 1448.74 Q115.811 1445.17 112.177 1445.17 M112.177 1441.47 Q117.987 1441.47 121.043 1446.07 Q124.122 1450.66 124.122 1459.41 Q124.122 1468.13 121.043 1472.74 Q117.987 1477.32 112.177 1477.32 Q106.367 1477.32 103.288 1472.74 Q100.233 1468.13 100.233 1459.41 Q100.233 1450.66 103.288 1446.07 Q106.367 1441.47 112.177 1441.47 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M554.946 1472.72 L571.265 1472.72 L571.265 1476.65 L549.321 1476.65 L549.321 1472.72 Q551.983 1469.96 556.566 1465.33 Q561.173 1460.68 562.353 1459.34 Q564.598 1456.81 565.478 1455.08 Q566.381 1453.32 566.381 1451.63 Q566.381 1448.87 564.436 1447.14 Q562.515 1445.4 559.413 1445.4 Q557.214 1445.4 554.761 1446.17 Q552.33 1446.93 549.552 1448.48 L549.552 1443.76 Q552.376 1442.62 554.83 1442.05 Q557.284 1441.47 559.321 1441.47 Q564.691 1441.47 567.885 1444.15 Q571.08 1446.84 571.08 1451.33 Q571.08 1453.46 570.27 1455.38 Q569.483 1457.28 567.376 1459.87 Q566.798 1460.54 563.696 1463.76 Q560.594 1466.95 554.946 1472.72 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M1011.42 1446.17 L999.612 1464.61 L1011.42 1464.61 L1011.42 1446.17 M1010.19 1442.09 L1016.07 1442.09 L1016.07 1464.61 L1021 1464.61 L1021 1468.5 L1016.07 1468.5 L1016.07 1476.65 L1011.42 1476.65 L1011.42 1468.5 L995.816 1468.5 L995.816 1463.99 L1010.19 1442.09 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M1456.93 1457.51 Q1453.78 1457.51 1451.93 1459.66 Q1450.1 1461.81 1450.1 1465.56 Q1450.1 1469.29 1451.93 1471.47 Q1453.78 1473.62 1456.93 1473.62 Q1460.08 1473.62 1461.91 1471.47 Q1463.76 1469.29 1463.76 1465.56 Q1463.76 1461.81 1461.91 1459.66 Q1460.08 1457.51 1456.93 1457.51 M1466.21 1442.86 L1466.21 1447.11 Q1464.45 1446.28 1462.65 1445.84 Q1460.86 1445.4 1459.11 1445.4 Q1454.48 1445.4 1452.02 1448.53 Q1449.59 1451.65 1449.24 1457.97 Q1450.61 1455.96 1452.67 1454.89 Q1454.73 1453.8 1457.21 1453.8 Q1462.42 1453.8 1465.42 1456.98 Q1468.46 1460.12 1468.46 1465.56 Q1468.46 1470.89 1465.31 1474.11 Q1462.16 1477.32 1456.93 1477.32 Q1450.93 1477.32 1447.76 1472.74 Q1444.59 1468.13 1444.59 1459.41 Q1444.59 1451.21 1448.48 1446.35 Q1452.37 1441.47 1458.92 1441.47 Q1460.68 1441.47 1462.46 1441.81 Q1464.27 1442.16 1466.21 1442.86 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M1904.64 1460.24 Q1901.31 1460.24 1899.39 1462.02 Q1897.49 1463.8 1897.49 1466.93 Q1897.49 1470.05 1899.39 1471.84 Q1901.31 1473.62 1904.64 1473.62 Q1907.97 1473.62 1909.89 1471.84 Q1911.82 1470.03 1911.82 1466.93 Q1911.82 1463.8 1909.89 1462.02 Q1908 1460.24 1904.64 1460.24 M1899.96 1458.25 Q1896.96 1457.51 1895.27 1455.45 Q1893.6 1453.39 1893.6 1450.43 Q1893.6 1446.28 1896.54 1443.87 Q1899.5 1441.47 1904.64 1441.47 Q1909.8 1441.47 1912.74 1443.87 Q1915.68 1446.28 1915.68 1450.43 Q1915.68 1453.39 1913.99 1455.45 Q1912.33 1457.51 1909.34 1458.25 Q1912.72 1459.04 1914.59 1461.33 Q1916.49 1463.62 1916.49 1466.93 Q1916.49 1471.95 1913.41 1474.64 Q1910.36 1477.32 1904.64 1477.32 Q1898.92 1477.32 1895.84 1474.64 Q1892.79 1471.95 1892.79 1466.93 Q1892.79 1463.62 1894.69 1461.33 Q1896.58 1459.04 1899.96 1458.25 M1898.25 1450.86 Q1898.25 1453.55 1899.92 1455.05 Q1901.61 1456.56 1904.64 1456.56 Q1907.65 1456.56 1909.34 1455.05 Q1911.05 1453.55 1911.05 1450.86 Q1911.05 1448.18 1909.34 1446.68 Q1907.65 1445.17 1904.64 1445.17 Q1901.61 1445.17 1899.92 1446.68 Q1898.25 1448.18 1898.25 1450.86 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2329.63 1472.72 L2337.27 1472.72 L2337.27 1446.35 L2328.96 1448.02 L2328.96 1443.76 L2337.22 1442.09 L2341.9 1442.09 L2341.9 1472.72 L2349.54 1472.72 L2349.54 1476.65 L2329.63 1476.65 L2329.63 1472.72 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2364.61 1445.17 Q2361 1445.17 2359.17 1448.74 Q2357.36 1452.28 2357.36 1459.41 Q2357.36 1466.51 2359.17 1470.08 Q2361 1473.62 2364.61 1473.62 Q2368.24 1473.62 2370.05 1470.08 Q2371.88 1466.51 2371.88 1459.41 Q2371.88 1452.28 2370.05 1448.74 Q2368.24 1445.17 2364.61 1445.17 M2364.61 1441.47 Q2370.42 1441.47 2373.47 1446.07 Q2376.55 1450.66 2376.55 1459.41 Q2376.55 1468.13 2373.47 1472.74 Q2370.42 1477.32 2364.61 1477.32 Q2358.8 1477.32 2355.72 1472.74 Q2352.66 1468.13 2352.66 1459.41 Q2352.66 1450.66 2355.72 1446.07 Q2358.8 1441.47 2364.61 1441.47 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M76.2328 1408.98 Q72.6217 1408.98 70.793 1412.54 Q68.9875 1416.08 68.9875 1423.21 Q68.9875 1430.32 70.793 1433.89 Q72.6217 1437.43 76.2328 1437.43 Q79.867 1437.43 81.6726 1433.89 Q83.5013 1430.32 83.5013 1423.21 Q83.5013 1416.08 81.6726 1412.54 Q79.867 1408.98 76.2328 1408.98 M76.2328 1405.27 Q82.0429 1405.27 85.0985 1409.88 Q88.1772 1414.46 88.1772 1423.21 Q88.1772 1431.94 85.0985 1436.55 Q82.0429 1441.13 76.2328 1441.13 Q70.4226 1441.13 67.344 1436.55 Q64.2884 1431.94 64.2884 1423.21 Q64.2884 1414.46 67.344 1409.88 Q70.4226 1405.27 76.2328 1405.27 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M68.2699 1207.2 L75.9087 1207.2 L75.9087 1180.84 L67.5986 1182.5 L67.5986 1178.24 L75.8624 1176.58 L80.5383 1176.58 L80.5383 1207.2 L88.1772 1207.2 L88.1772 1211.14 L68.2699 1211.14 L68.2699 1207.2 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M71.8578 977.879 L88.1772 977.879 L88.1772 981.815 L66.2328 981.815 L66.2328 977.879 Q68.8949 975.125 73.4782 970.495 Q78.0846 965.842 79.2652 964.5 Q81.5105 961.977 82.3902 960.241 Q83.2929 958.481 83.2929 956.792 Q83.2929 954.037 81.3485 952.301 Q79.4272 950.565 76.3254 950.565 Q74.1263 950.565 71.6726 951.329 Q69.2421 952.093 66.4643 953.643 L66.4643 948.921 Q69.2884 947.787 71.7421 947.208 Q74.1958 946.63 76.2328 946.63 Q81.6031 946.63 84.7976 949.315 Q87.992 952 87.992 956.491 Q87.992 958.62 87.1818 960.542 Q86.3948 962.44 84.2883 965.032 Q83.7096 965.704 80.6078 968.921 Q77.5059 972.116 71.8578 977.879 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M81.0476 733.858 Q84.404 734.575 86.279 736.844 Q88.1772 739.112 88.1772 742.446 Q88.1772 747.561 84.6587 750.362 Q81.1402 753.163 74.6587 753.163 Q72.4828 753.163 70.168 752.723 Q67.8764 752.307 65.4227 751.45 L65.4227 746.936 Q67.3671 748.071 69.6819 748.649 Q71.9967 749.228 74.5198 749.228 Q78.918 749.228 81.2096 747.492 Q83.5244 745.756 83.5244 742.446 Q83.5244 739.39 81.3717 737.677 Q79.242 735.941 75.4226 735.941 L71.3949 735.941 L71.3949 732.099 L75.6078 732.099 Q79.0569 732.099 80.8855 730.733 Q82.7142 729.344 82.7142 726.751 Q82.7142 724.089 80.8161 722.677 Q78.9411 721.242 75.4226 721.242 Q73.5013 721.242 71.3023 721.659 Q69.1032 722.075 66.4643 722.955 L66.4643 718.788 Q69.1264 718.048 71.4412 717.677 Q73.7791 717.307 75.8393 717.307 Q81.1633 717.307 84.2652 719.738 Q87.367 722.145 87.367 726.265 Q87.367 729.136 85.7235 731.126 Q84.08 733.094 81.0476 733.858 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M78.5939 492.683 L66.7884 511.132 L78.5939 511.132 L78.5939 492.683 M77.367 488.609 L83.2466 488.609 L83.2466 511.132 L88.1772 511.132 L88.1772 515.021 L83.2466 515.021 L83.2466 523.169 L78.5939 523.169 L78.5939 515.021 L62.9921 515.021 L62.9921 510.507 L77.367 488.609 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M67.2745 259.287 L85.6309 259.287 L85.6309 263.222 L71.5569 263.222 L71.5569 271.694 Q72.5754 271.347 73.5939 271.185 Q74.6124 271 75.6309 271 Q81.418 271 84.7976 274.171 Q88.1772 277.342 88.1772 282.759 Q88.1772 288.337 84.705 291.439 Q81.2328 294.518 74.9134 294.518 Q72.7374 294.518 70.4689 294.148 Q68.2236 293.777 65.8162 293.037 L65.8162 288.337 Q67.8995 289.472 70.1217 290.027 Q72.3439 290.583 74.8208 290.583 Q78.8254 290.583 81.1633 288.476 Q83.5013 286.37 83.5013 282.759 Q83.5013 279.148 81.1633 277.041 Q78.8254 274.935 74.8208 274.935 Q72.9458 274.935 71.0708 275.351 Q69.2189 275.768 67.2745 276.648 L67.2745 259.287 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M76.6495 45.3807 Q73.5013 45.3807 71.6495 47.5334 Q69.8208 49.6862 69.8208 53.4362 Q69.8208 57.163 71.6495 59.3389 Q73.5013 61.4917 76.6495 61.4917 Q79.7976 61.4917 81.6263 59.3389 Q83.4781 57.163 83.4781 53.4362 Q83.4781 49.6862 81.6263 47.5334 Q79.7976 45.3807 76.6495 45.3807 M85.9318 30.728 L85.9318 34.9872 Q84.1726 34.1539 82.367 33.7141 Q80.5846 33.2743 78.8254 33.2743 Q74.1958 33.2743 71.7421 36.3992 Q69.3115 39.5242 68.9643 45.8436 Q70.33 43.8298 72.3902 42.765 Q74.4504 41.677 76.9272 41.677 Q82.1355 41.677 85.1448 44.8483 Q88.1772 47.9964 88.1772 53.4362 Q88.1772 58.7602 85.029 61.9778 Q81.8809 65.1954 76.6495 65.1954 Q70.6541 65.1954 67.4828 60.6121 Q64.3116 56.0056 64.3116 47.2788 Q64.3116 39.0844 68.2004 34.2233 Q72.0893 29.3391 78.6402 29.3391 Q80.3994 29.3391 82.1818 29.6863 Q83.9874 30.0335 85.9318 30.728 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M1231.53 1510.27 L1231.53 1520.4 L1243.59 1520.4 L1243.59 1524.95 L1231.53 1524.95 L1231.53 1544.3 Q1231.53 1548.66 1232.71 1549.9 Q1233.91 1551.14 1237.58 1551.14 L1243.59 1551.14 L1243.59 1556.04 L1237.58 1556.04 Q1230.8 1556.04 1228.22 1553.53 Q1225.64 1550.98 1225.64 1544.3 L1225.64 1524.95 L1221.34 1524.95 L1221.34 1520.4 L1225.64 1520.4 L1225.64 1510.27 L1231.53 1510.27 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip112)\" style=\"stroke:#009af9; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1193.86 134.583,1162.67 156.989,1123.29 179.395,1074.19 201.8,1013.43 224.206,938.629 246.612,846.894 269.018,734.764 291.423,598.16 313.829,432.34 \n",
       "  336.235,232.038 358.641,-8.08354 381.047,-293.762 403.452,-628.423 425.858,-1009.93 448.264,-1426.29 470.67,-1844.17 493.076,-2183.43 515.481,-2309.95 537.887,-2057.69 \n",
       "  560.293,-1393.94 582.699,-554.293 605.104,154.88 627.51,622.003 649.916,898.398 672.322,1056.63 694.728,1147.5 717.133,1200.63 739.539,1231.55 761.945,1248.53 \n",
       "  784.351,1256.09 806.757,1256.53 829.162,1251.06 851.568,1240.13 873.974,1223.66 896.38,1201.24 918.786,1172.09 941.191,1135.12 963.597,1088.89 986.003,1031.56 \n",
       "  1008.41,960.906 1030.81,874.183 1053.22,768.086 1075.63,638.699 1098.03,481.547 1120.44,291.294 1142.84,62.5033 1165.25,-209.894 1187.65,-526.598 1210.06,-896.502 \n",
       "  1232.47,-1310.4 1254.87,-1732.14 1277.28,-2098.6 1299.68,-2300.07 1322.09,-2165.62 1344.5,-1604.33 1366.9,-784.363 1389.31,-18.48 1411.71,515.208 1434.12,832.772 \n",
       "  1456.52,1018.21 1478.93,1124.73 1501.34,1186.71 1523.74,1223.02 1546.15,1243.48 1568.55,1253.41 1590.96,1255.72 1613.36,1251.81 1635.77,1242.32 1658.18,1227.35 \n",
       "  1680.58,1206.52 1702.99,1179.17 1725.39,1144.29 1747.8,1100.54 1770.21,1046.2 1792.61,979.136 1815.02,896.734 1837.42,795.855 1859.83,672.75 1882.23,523.049 \n",
       "  1904.64,341.827 1927.05,123.78 1949.45,-137.276 1971.86,-445.362 1994.26,-801.62 2016.67,-1200.61 2039.07,-1624.78 2061.48,-2015.62 2083.89,-2267.53 2106.29,-2228.96 \n",
       "  2128.7,-1771.05 2151.1,-986.03 2173.51,-184.941 2195.92,405.2 2218.32,771.49 2240.73,982.752 2263.13,1104.11 2285.54,1174.66 2307.94,1215.89 2330.35,1239.51 \n",
       "  2352.76,1251.63 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip112)\" style=\"stroke:#e26f46; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  112.177,1193.86 134.583,1227.25 156.989,1254.76 179.395,1277.28 201.8,1295.58 224.206,1310.26 246.612,1321.79 269.018,1330.52 291.423,1336.65 313.829,1340.22 \n",
       "  336.235,1341.06 358.641,1338.66 381.047,1332.19 403.452,1319.87 425.858,1298.17 448.264,1260.85 470.67,1196.54 493.076,1084.62 515.481,895.02 537.887,606.663 \n",
       "  560.293,259.526 582.699,-24.1719 605.104,-144.463 627.51,-108.648 649.916,18.0319 672.322,181.338 694.728,348.647 717.133,504.728 739.539,643.746 761.945,764.439 \n",
       "  784.351,867.587 806.757,954.91 829.162,1028.33 851.568,1089.76 873.974,1140.96 896.38,1183.49 918.786,1218.69 941.191,1247.72 963.597,1271.53 986.003,1290.94 \n",
       "  1008.41,1306.56 1030.81,1318.92 1053.22,1328.4 1075.63,1335.23 1098.03,1339.49 1120.44,1341.14 1142.84,1339.77 1165.25,1334.5 1187.65,1322.84 1210.06,1303.98 \n",
       "  1232.47,1272.89 1254.87,1218.03 1277.28,1121.44 1299.68,956.589 1322.09,696.006 1344.5,356.268 1366.9,43.3272 1389.31,-126.269 1411.71,-128.948 1434.12,-19.8128 \n",
       "  1456.52,136.327 1478.93,303.898 1501.34,463.488 1523.74,607.173 1546.15,732.714 1568.55,840.462 1590.96,931.893 1613.36,1008.92 1635.77,1073.46 1658.18,1127.32 \n",
       "  1680.58,1172.1 1702.99,1209.21 1725.39,1239.84 1747.8,1265.01 1770.21,1285.55 1792.61,1302.16 1815.02,1315.37 1837.42,1325.6 1859.83,1333.12 1882.23,1338.07 \n",
       "  1904.64,1340.37 1927.05,1339.72 1949.45,1335.61 1971.86,1326.64 1994.26,1310.28 2016.67,1282.23 2039.07,1233.68 2061.48,1148.65 2083.89,1003.61 2106.29,768.536 \n",
       "  2128.7,443.515 2151.1,111.746 2173.51,-98.4355 2195.92,-137.309 2218.32,-50.8719 2240.73,97.9132 2263.13,264.873 2285.54,427.25 2307.94,574.997 2330.35,704.796 \n",
       "  2352.76,816.594 \n",
       "  \"/>\n",
       "<path clip-path=\"url(#clip110)\" d=\"\n",
       "M1946.68 312.204 L2280.76 312.204 L2280.76 130.764 L1946.68 130.764  Z\n",
       "  \" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  1946.68,312.204 2280.76,312.204 2280.76,130.764 1946.68,130.764 1946.68,312.204 \n",
       "  \"/>\n",
       "<polyline clip-path=\"url(#clip110)\" style=\"stroke:#009af9; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  1970.68,191.244 2114.68,191.244 \n",
       "  \"/>\n",
       "<path clip-path=\"url(#clip110)\" d=\"M 0 0 M2138.68 198.293 L2138.68 182.598 L2142.94 182.598 L2142.94 198.131 Q2142.94 201.811 2144.38 203.663 Q2145.81 205.492 2148.68 205.492 Q2152.13 205.492 2154.12 203.293 Q2156.14 201.094 2156.14 197.297 L2156.14 182.598 L2160.4 182.598 L2160.4 208.524 L2156.14 208.524 L2156.14 204.543 Q2154.59 206.904 2152.52 208.061 Q2150.49 209.195 2147.78 209.195 Q2143.31 209.195 2141 206.418 Q2138.68 203.64 2138.68 198.293 M2149.4 181.973 L2149.4 181.973 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2166.27 204.589 L2173.91 204.589 L2173.91 178.223 L2165.6 179.89 L2165.6 175.631 L2173.87 173.964 L2178.54 173.964 L2178.54 204.589 L2186.18 204.589 L2186.18 208.524 L2166.27 208.524 L2166.27 204.589 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2200.88 172.552 Q2197.78 177.876 2196.27 183.084 Q2194.77 188.293 2194.77 193.64 Q2194.77 198.987 2196.27 204.242 Q2197.8 209.473 2200.88 214.774 L2197.18 214.774 Q2193.71 209.334 2191.97 204.08 Q2190.26 198.825 2190.26 193.64 Q2190.26 188.478 2191.97 183.246 Q2193.68 178.015 2197.18 172.552 L2200.88 172.552 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2209.56 175.237 L2209.56 182.598 L2218.33 182.598 L2218.33 185.908 L2209.56 185.908 L2209.56 199.982 Q2209.56 203.154 2210.42 204.057 Q2211.3 204.959 2213.96 204.959 L2218.33 204.959 L2218.33 208.524 L2213.96 208.524 Q2209.03 208.524 2207.15 206.695 Q2205.28 204.844 2205.28 199.982 L2205.28 185.908 L2202.15 185.908 L2202.15 182.598 L2205.28 182.598 L2205.28 175.237 L2209.56 175.237 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2222.13 172.552 L2225.83 172.552 Q2229.31 178.015 2231.02 183.246 Q2232.76 188.478 2232.76 193.64 Q2232.76 198.825 2231.02 204.08 Q2229.31 209.334 2225.83 214.774 L2222.13 214.774 Q2225.21 209.473 2226.71 204.242 Q2228.24 198.987 2228.24 193.64 Q2228.24 188.293 2226.71 183.084 Q2225.21 177.876 2222.13 172.552 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip110)\" style=\"stroke:#e26f46; stroke-width:4; stroke-opacity:1; fill:none\" points=\"\n",
       "  1970.68,251.724 2114.68,251.724 \n",
       "  \"/>\n",
       "<path clip-path=\"url(#clip110)\" d=\"M 0 0 M2138.68 258.773 L2138.68 243.078 L2142.94 243.078 L2142.94 258.611 Q2142.94 262.291 2144.38 264.143 Q2145.81 265.972 2148.68 265.972 Q2152.13 265.972 2154.12 263.773 Q2156.14 261.574 2156.14 257.777 L2156.14 243.078 L2160.4 243.078 L2160.4 269.004 L2156.14 269.004 L2156.14 265.023 Q2154.59 267.384 2152.52 268.541 Q2150.49 269.675 2147.78 269.675 Q2143.31 269.675 2141 266.898 Q2138.68 264.12 2138.68 258.773 M2149.4 242.453 L2149.4 242.453 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2169.49 265.069 L2185.81 265.069 L2185.81 269.004 L2163.87 269.004 L2163.87 265.069 Q2166.53 262.314 2171.11 257.685 Q2175.72 253.032 2176.9 251.689 Q2179.15 249.166 2180.02 247.43 Q2180.93 245.671 2180.93 243.981 Q2180.93 241.226 2178.98 239.49 Q2177.06 237.754 2173.96 237.754 Q2171.76 237.754 2169.31 238.518 Q2166.88 239.282 2164.1 240.833 L2164.1 236.111 Q2166.92 234.976 2169.38 234.398 Q2171.83 233.819 2173.87 233.819 Q2179.24 233.819 2182.43 236.504 Q2185.63 239.189 2185.63 243.68 Q2185.63 245.81 2184.82 247.731 Q2184.03 249.629 2181.92 252.222 Q2181.34 252.893 2178.24 256.111 Q2175.14 259.305 2169.49 265.069 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2200.51 233.032 Q2197.41 238.356 2195.9 243.564 Q2194.4 248.773 2194.4 254.12 Q2194.4 259.467 2195.9 264.722 Q2197.43 269.953 2200.51 275.254 L2196.81 275.254 Q2193.33 269.814 2191.6 264.56 Q2189.89 259.305 2189.89 254.12 Q2189.89 248.958 2191.6 243.726 Q2193.31 238.495 2196.81 233.032 L2200.51 233.032 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2209.19 235.717 L2209.19 243.078 L2217.96 243.078 L2217.96 246.388 L2209.19 246.388 L2209.19 260.462 Q2209.19 263.634 2210.05 264.537 Q2210.93 265.439 2213.59 265.439 L2217.96 265.439 L2217.96 269.004 L2213.59 269.004 Q2208.66 269.004 2206.78 267.175 Q2204.91 265.324 2204.91 260.462 L2204.91 246.388 L2201.78 246.388 L2201.78 243.078 L2204.91 243.078 L2204.91 235.717 L2209.19 235.717 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /><path clip-path=\"url(#clip110)\" d=\"M 0 0 M2221.76 233.032 L2225.46 233.032 Q2228.94 238.495 2230.65 243.726 Q2232.39 248.958 2232.39 254.12 Q2232.39 259.305 2230.65 264.56 Q2228.94 269.814 2225.46 275.254 L2221.76 275.254 Q2224.84 269.953 2226.34 264.722 Q2227.87 259.467 2227.87 254.12 Q2227.87 248.773 2226.34 243.564 Q2224.84 238.356 2221.76 233.032 Z\" fill=\"#000000\" fill-rule=\"evenodd\" fill-opacity=\"1\" /></svg>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "┌ Warning: `data(x)` is deprecated, use `x` instead.\n",
      "│   caller = (::var\"#5#6\")() at In[2]:41\n",
      "└ @ Main .\\In[2]:41\n",
      "┌ Warning: diffeq_rd has been deprecated in the update of DiffEqFlux to Zygote support. Use the concrete_solve function with sensealg=TrackerAdjoint() to recover the same functionality. See https://docs.juliadiffeq.org/latest/analysis/sensitivity/ for more details\n",
      "└ @ DiffEqFlux C:\\Users\\Julius\\.julia\\packages\\DiffEqFlux\\7Lfxh\\src\\DiffEqFlux.jl:19\n"
     ]
    },
    {
     "ename": "Zygote.CompileError",
     "evalue": "Compiling Tuple{DiffEqFlux.var\"##diffeq_rd#2\",Array{Float64,1},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}},typeof(diffeq_rd),Array{Float64,1},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(lotka_volterra),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Tsit5}: try/catch is not supported.",
     "output_type": "error",
     "traceback": [
      "Compiling Tuple{DiffEqFlux.var\"##diffeq_rd#2\",Array{Float64,1},Base.Iterators.Pairs{Symbol,Float64,Tuple{Symbol},NamedTuple{(:saveat,),Tuple{Float64}}},typeof(diffeq_rd),Array{Float64,1},ODEProblem{Array{Float64,1},Tuple{Float64,Float64},true,Array{Float64,1},ODEFunction{true,typeof(lotka_volterra),LinearAlgebra.UniformScaling{Bool},Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}},DiffEqBase.StandardODEProblem},Tsit5}: try/catch is not supported.",
      "",
      "Stacktrace:",
      " [1] error(::String) at .\\error.jl:33",
      " [2] instrument(::IRTools.Inner.IR) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\reverse.jl:89",
      " [3] #Primal#16 at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\reverse.jl:170 [inlined]",
      " [4] Zygote.Adjoint(::IRTools.Inner.IR; varargs::Int64, normalise::Bool) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\reverse.jl:283",
      " [5] _lookup_grad(::Type{T} where T) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\emit.jl:101",
      " [6] #s3320#1912 at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\interface2.jl:21 [inlined]",
      " [7] #s3320#1912(::Any, ::Any, ::Any) at .\\none:0",
      " [8] (::Core.GeneratedFunctionStub)(::Any, ::Vararg{Any,N} where N) at .\\boot.jl:526",
      " [9] (::Zygote.var\"#174#175\"{typeof(∂(#diffeq_rd#2)),Tuple{NTuple{6,Nothing},Tuple{}}})(::Array{Float64,2}) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\lib\\lib.jl:182",
      " [10] (::Zygote.var\"#347#back#176\"{Zygote.var\"#174#175\"{typeof(∂(#diffeq_rd#2)),Tuple{NTuple{6,Nothing},Tuple{}}}})(::Array{Float64,2}) at C:\\Users\\Julius\\.julia\\packages\\ZygoteRules\\6nssF\\src\\adjoint.jl:49",
      " [11] (::typeof(∂(diffeq_rd##kw)))(::Array{Float64,2}) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\interface2.jl:0",
      " [12] predict_rd at .\\In[2]:30 [inlined]",
      " [13] (::typeof(∂(predict_rd)))(::Array{Float64,1}) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\interface2.jl:0",
      " [14] loss_rd at .\\In[2]:32 [inlined]",
      " [15] (::typeof(∂(loss_rd)))(::Float64) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\interface2.jl:0",
      " [16] #174 at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\lib\\lib.jl:182 [inlined]",
      " [17] #347#back at C:\\Users\\Julius\\.julia\\packages\\ZygoteRules\\6nssF\\src\\adjoint.jl:49 [inlined]",
      " [18] #17 at C:\\Users\\Julius\\.julia\\packages\\Flux\\Fj3bt\\src\\optimise\\train.jl:89 [inlined]",
      " [19] (::Zygote.var\"#49#50\"{Zygote.Params,Zygote.Context,typeof(∂(#17))})(::Float64) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\interface.jl:179",
      " [20] gradient(::Function, ::Zygote.Params) at C:\\Users\\Julius\\.julia\\packages\\Zygote\\YeCEW\\src\\compiler\\interface.jl:55",
      " [21] macro expansion at C:\\Users\\Julius\\.julia\\packages\\Flux\\Fj3bt\\src\\optimise\\train.jl:88 [inlined]",
      " [22] macro expansion at C:\\Users\\Julius\\.julia\\packages\\Juno\\tLMZd\\src\\progress.jl:134 [inlined]",
      " [23] train!(::typeof(loss_rd), ::Array{Array{Float64,1},1}, ::Base.Iterators.Take{Base.Iterators.Repeated{Tuple{}}}, ::ADAM; cb::var\"#5#6\") at C:\\Users\\Julius\\.julia\\packages\\Flux\\Fj3bt\\src\\optimise\\train.jl:81",
      " [24] top-level scope at In[2]:45"
     ]
    }
   ],
   "source": [
    "using Flux, DiffEqFlux, DifferentialEquations, Plots\n",
    "\n",
    "## Setup ODE to optimize\n",
    "function lotka_volterra(du,u,p,t)\n",
    "  x, y = u\n",
    "  α, β, δ, γ = p\n",
    "  du[1] = dx = α*x - β*x*y\n",
    "  du[2] = dy = -δ*y + γ*x*y\n",
    "end\n",
    "u0 = [1.0,1.0]\n",
    "tspan = (0.0,10.0)\n",
    "p = [1.5,1.0,3.0,1.0]\n",
    "prob = ODEProblem(lotka_volterra,u0,tspan,p)\n",
    "\n",
    "# Verify ODE solution\n",
    "sol = solve(prob,Tsit5())\n",
    "plot(sol)\n",
    "\n",
    "# Generate data from the ODE\n",
    "sol = solve(prob,Tsit5(),saveat=0.1)\n",
    "A = sol[1,:] # length 101 vector\n",
    "t = 0:0.1:10.0\n",
    "scatter!(t,A)\n",
    "\n",
    "# Build a neural network that sets the cost as the difference from the\n",
    "# generated data and 1\n",
    "\n",
    "p = param([2.2, 1.0, 2.0, 0.4]) # Initial Parameter Vector\n",
    "function predict_rd() # Our 1-layer neural network\n",
    "  diffeq_rd(p,prob,Tsit5(),saveat=0.1)[1,:]\n",
    "end\n",
    "loss_rd() = sum(abs2,x-1 for x in predict_rd()) # loss function\n",
    "\n",
    "# Optimize the parameters so the ODE's solution stays near 1\n",
    "\n",
    "data = Iterators.repeated((), 100)\n",
    "opt = ADAM(0.1)\n",
    "cb = function () #callback function to observe training\n",
    "  display(loss_rd())\n",
    "  # using `remake` to re-create our `prob` with current parameters `p`\n",
    "  display(plot(solve(remake(prob,p=Flux.data(p)),Tsit5(),saveat=0.1),ylim=(0,6)))\n",
    "end\n",
    "# Display the ODE with the initial parameter values.\n",
    "cb()\n",
    "Flux.train!(loss_rd, [p], data, opt, cb = cb)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Julia 1.4.2",
   "language": "julia",
   "name": "julia-1.4"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "1.4.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
